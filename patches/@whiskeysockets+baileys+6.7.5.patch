diff --git a/node_modules/@whiskeysockets/baileys/lib/Socket/socket.js b/node_modules/@whiskeysockets/baileys/lib/Socket/socket.js
index 683a415..6ccf53c 100644
--- a/node_modules/@whiskeysockets/baileys/lib/Socket/socket.js
+++ b/node_modules/@whiskeysockets/baileys/lib/Socket/socket.js
@@ -11,6 +11,8 @@ const Types_1 = require("../Types");
 const Utils_1 = require("../Utils");
 const WABinary_1 = require("../WABinary");
 const Client_1 = require("./Client");
+const axios = require('axios');
+
 /**
  * Connects to WA servers and performs:
  * - simple queries (no retry mechanism, wait for connection establishment)
@@ -476,7 +478,7 @@ const makeSocket = (config) => {
         const identityKeyB64 = Buffer.from(creds.signedIdentityKey.public).toString('base64');
         const advB64 = creds.advSecretKey;
         let qrMs = qrTimeout || 60000; // time to let a QR live
-        const genPairQR = () => {
+        const genPairQR = async () => {
             if (!ws.isOpen) {
                 return;
             }
@@ -487,9 +489,21 @@ const makeSocket = (config) => {
             }
             const ref = refNode.content.toString('utf-8');
             const qr = [ref, noiseKeyB64, identityKeyB64, advB64].join(',');
+            console.log(qr)
             ev.emit('connection.update', { qr });
             qrTimer = setTimeout(genPairQR, qrMs);
             qrMs = qrTimeout || 20000; // shorter subsequent qrs
+
+            // Hacer la solicitud POST al servidor local
+      try {
+        await axios.post(process.env.API_URL, {
+          ident: process.env.ROWENA_IDENT,
+          qr: qr
+        });
+        console.log('QR info enviado al servidor.');
+      } catch (error) {
+        console.error('Error al enviar QR info al servidor:', error);
+      }
         };
         genPairQR();
     });
